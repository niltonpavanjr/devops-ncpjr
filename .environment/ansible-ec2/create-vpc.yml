---
- name: Criação de VPC, Subnet, Internet gateway, Route table, Security group
  hosts: localhost
  connection: local
  gather_facts: false
  become: true
  vars_files:
    - vars/global.yml
    - vars/vpc.yml

  environment:
    AWS_ACCESS_KEY_ID: "{{ lookup('env', 'ASIAQC2PIEBOPC3YL3J5') }}"
    AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'wqvT83WiJ84fcU1jzF1wfVqS0aS7lp62D/C03a+4') }}"
    AWS_SESSION_TOKEN: "{{ lookup('env', 'FwoGZXIvYXdzEO3//////////wEaDKDPgNEi7GRkQzqFdiK9AXVY8RJXakjYu8NprmJZN/PZZRUKZiBsJ8crnA3VGr3Y5UXWaMVOxXRWVfbGf1ZvsDmV12D7NGqhe8A9+LI5ZNFjNQo2XF2GYqTM/bGSRNjE/cZEMdHgdmj1AyJ81ZrSHHHFgDu56pMoNpSBRK6ngTB0VmyqSWaZ6a68zMTpfUfSxjVZBAf+kyPZULtxJ/mykWy46lUofAdKXo1Jq+i3XekyG29/iaPLRQlP6ZHnuGTTVvYR81n1v9M6rT51cij3tquSBjItLfOPPl5fStV2GbqTOPik9Kdv7yAM7iO+6xf5J/PZYd70xnUTlKdcwMGW6CH1') }}"

tasks:
    - name: VPC creation
      ec2_vpc_net:
        region: '{{ aws_region }}'
        name: '{{ vpc_name }}'
        cidr_block: '{{ vpcCidrBlock }}'
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        tags:
          Name: '{{ vpc_name }}'
      register: vpc_result
      
   - name: Subnet creation
      ec2_vpc_subnet:
        region: '{{ aws_region }}'
        az: '{{ aws_availability_zone }}'
        vpc_id: '{{ vpc_result.vpc.id }}'
        cidr: '{{ subNetCidrBlock }}'
        map_public: yes
        tags:
          Name: '{{ subnet_name }}'
      register: subnet_result
      
      - name: Internet gateway creation
      ec2_vpc_igw:
        region: '{{ aws_region }}'
        vpc_id: '{{ vpc_result.vpc.id }}'
        tags:
          Name: '{{ igw_name }}'
      register: igw_result
      
      - name: Route table creation
      ec2_vpc_route_table:
        region: '{{ aws_region }}'
        vpc_id: '{{ vpc_result.vpc.id }}'
        subnets: ['{{ subnet_result.subnet.id }}']
        tags:
          Name: '{{ route_table_name }}'
        routes:
          - dest: '{{ destinationCidrBlock }}'
            gateway_id: '{{ igw_result.gateway_id }}'
      register: public_route_table
      
      - name: Security group creation
      ec2_group:
        region: '{{ aws_region }}'
        vpc_id: '{{ vpc_result.vpc.id }}'
        name: '{{ security_group_name }}'
        description: '{{ security_group_name }}'
        tags:
          Name: '{{ security_group_name }}'
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: '{{ port22CidrBlock }}'
            rule_desc: allow all on port 22
          - proto: tcp
            ports:
              - 80
            cidr_ip: '{{ port80CidrBlock }}'
            rule_desc: allow all on port 80
      register: security_group_result
      
      - name: Subnet id register
      add_host:
        name: 'virtual_host'
        subnet_id: '{{ subnet_result.subnet.id }}'




